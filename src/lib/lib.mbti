// Generated using `moon info`, DON'T EDIT IT
package "tiye/cirru-parser/lib"

import(
  "moonbitlang/core/json"
)

// Values
fn format_to_lisp(Array[Cirru]) -> String raise FormatError

// Errors
type CirruParseError
fn CirruParseError::to_string(Self) -> String

pub(all) suberror FormatCirruError String
impl Show for FormatCirruError

type FormatError

// Types and methods
pub(all) enum Cirru {
  Leaf(String)
  List(Array[Cirru])
}
fn Cirru::format(Array[Self], CirruWriterOptions) -> String raise FormatCirruError
fn Cirru::is_comment(Self) -> Bool
fn Cirru::is_empty(Self) -> Bool
fn Cirru::is_nested(Self) -> Bool
fn Cirru::length(Self) -> Int
fn Cirru::parse(String) -> Array[Self] raise CirruParseError
impl Compare for Cirru
impl Eq for Cirru
impl Hash for Cirru
impl Show for Cirru
impl ToJson for Cirru
impl @json.FromJson for Cirru

pub(all) struct CirruWriterOptions {
  use_inline : Bool
}

// Type aliases

// Traits

